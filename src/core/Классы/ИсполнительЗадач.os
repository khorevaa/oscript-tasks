#Использовать "./internal/commands"
#Использовать logos

Перем РаБочийКаталог Экспорт;
Перем РабочаяОбласть Экспорт;
Перем ОбщиеОпции Экспорт;
Перем ИндексЗадач;

Перем Лог;

Процедура ПриСозданииОбъекта()
	
	Лог = Логирование.ПолучитьЛог("oscript.app.tasks").Поля("prefix", "runner");
	
КонецПроцедуры

Процедура Исполнить(ИмяЗадачи, 
	Знач ПользовательскиеАргументы = Неопределено,
	Знач ПользовательскиеОпции = Неопределено,
	Знач ПользовательскиеПеременныеОкружения = Неопределено) Экспорт


	Лог.Отладка("Исполняю задачу <%1>", ИмяЗадачи);

// 	ОпцииЗадачи = ИсполнительЗадач.ЗаполнитьОпции(ПользовательскиеОпции);
// ОпцииЗадачи = ИсполнительЗадач.ЗаполнитьОпции(Опции);

// АргументыЗадачи = ИсполнительЗадач.ЗаполнитьАргументы(ПользовательскиеАргументы);

	Задача = ИндексЗадач[ИмяЗадачи];

	Если Задача = Неопределено Тогда
		ВызватьИсключение "Задача не найдена в индексе задач";
	КонецЕсли;

	КомандаЗадачи = Новый КомандаЗадачи();
	КомандаЗадачи.УстановитьРабочийКаталог(РабочийКаталог);
	КомандаЗадачи.УстановитьКоманду(Задача.Команда);
	Лог.Отладка("Количество аргументов <%1>", Задача.Аргументы.Количество());

	КомандаЗадачи.ДобавитьПараметры(Задача.Аргументы);
	КомандаЗадачи.ПоказыватьВыводНемедленно(Истина);

	КодВозврата = КомандаЗадачи.Исполнить();

	Если КодВозврата <> 0 Тогда
		Лог.Поля("КодВозврата", КодВозврата).КритичнаяОшибка("Не правильный код возврата");

		ВызватьИсключение КомандаЗадачи.ПолучитьВывод();
	КонецЕсли;

КонецПроцедуры

Процедура УстановитьИндексЗадач(Знач НовыйИндексЗадач) Экспорт
	ИндексЗадач = НовыйИндексЗадач;
КонецПроцедуры

Процедура УстановитьРабочийКаталог(Знач ПутьККаталогу) Экспорт
	РабочийКаталог = ПутьККаталогу;
КонецПроцедуры

Процедура УстановитьРабочуюОбласть(Знач ПутьККаталогу) Экспорт
	РабочаяОбласть = ПутьККаталогу;
КонецПроцедуры

// Процедура ЗаполнитьАргументы(Знач АргументыЗадачи, Знач ОпцииЗадачи)

// 	Если АргументыЗадачи.Количество() = 0 Тогда
// 		Возврат;
// 	КонецЕсли;

// 	// TODO: Заполнение переменных
	
// 	Для каждого Аргумент Из АргументыЗадачи Цикл
		

// 	КонецЦикла;

// КонецПроцедуры

// Функция ЗаполнитьОпции(Знач ОпцииЗадачи)

// 	ЗаполненныеОпции = Новый Соответствие();

// 	Для каждого ОпцияЗадачи Из Опции Цикл
// 		ЗаполненныеОпции.Вставить(ОпцияЗадачи.Ключ, );
// 	КонецЦикла;
	
// КонецФункции

// Процедура ЗаполнитьЗначениеОпций(ЗначениеОпции, ЗаполненныеОпции)
	
	

// 	СтрНайти(ЗначениеОпции, "$")


// КонецПроцедуры

